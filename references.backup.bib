@book{Hair2014,
abstract = {A Primer on Partial Least Squares Structural Equation Modeling (PLS-SEM), by Hair, Hult, Ringle, and Sarstedt, provides a concise yet very practical guide to understanding and using PLS structural equation modeling (PLS-SEM). PLS-SEM is evolving as a statistical modeling technique and its use has increased exponentially in recent years within a variety of disciplines, due to the recognition that PLS-SEM's distinctive methodological features make it a viable alternative to the more popular covariance-based SEM approach. This text—the only comprehensive book available to explain the fundamental aspects of the method—includes extensive examples on SmartPLS software, and is accompanied by multiple data sets that are available for download from the accompanying website (www.pls-sem.com).},
archivePrefix = {arXiv},
arxivId = {arXiv:gr-qc/9809069v1},
author = {Hair, Joseph F. Jr. and Hult, G. Tomas M. and Ringle, Christian and Sarstedt, Marko},
booktitle = {Long Range Planning},
doi = {10.1016/j.lrp.2013.01.002},
eprint = {9809069v1},
isbn = {9781452217444},
issn = {00246301},
mendeley-groups = {MODELS 2016},
number = {1-2},
pages = {328},
pmid = {15003161},
primaryClass = {arXiv:gr-qc},
title = {{A Primer on Partial Least Squares Structural Equation Modeling (PLS-SEM)}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0024630113000034},
volume = {46},
year = {2014}
}

@article{kolovos2015eugenia,
  title={Eugenia: towards disciplined and automated development of GMF-based graphical model editors},
  author={Kolovos, Dimitrios S and Garc{\'\i}a-Dom{\'\i}nguez, Antonio and Rose, Louis M and Paige, Richard F},
  journal={Software \& Systems Modeling},
  pages={1--27},
  year={2015},
  publisher={Springer}
}

@misc{Richardsen2014,
abstract = {Learning about software modeling languages from documentation can be a difficult
and confusing process, and many of the currently existing modeling language tutorials
are only marginally better. A ...},
author = {Richardsen, Oyvin},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/Richardsen/Unknown/Richardsen - Unknown - 2014 - Learning Modeling Languages Using Strategies from Gaming.pdf:pdf},
language = {eng},
mendeley-groups = {Literature Review},
publisher = {Institutt for telematikk},
title = {{Learning Modeling Languages Using Strategies from Gaming}},
url = {http://www.diva-portal.org/smash/record.jsf?pid=diva2{\%}3A749348{\&}dswid=-1945},
year = {2014}
}

@article{Ionita2015,
author = {Ionita, Dan B. and Wieringa, Roel and Bullee, Jan-willem and Vasenev, Alexandr},
doi = {10.1007/978-3-319-25264-3},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/Ionita et al/Unknown/Ionita et al. - Unknown - 2015 - Tangible Modelling to Elicit Domain Knowledge An Experiment and Focus Group.pdf:pdf},
isbn = {978-3-319-25263-6},
keywords = {enterprise models,participatory modelling,socio-technical,tangible modelling,usability experiment},
mendeley-groups = {Literature Review,MODELS 2016},
pages = {558--565},
title = {{Tangible Modelling to Elicit Domain Knowledge: An Experiment and Focus Group}},
url = {http://link.springer.com/10.1007/978-3-319-25264-3},
volume = {9381},
year = {2015}
}

@article{Stikkolorum2014,
abstract = {This paper introduces our gamification of a part of our software design curriculum. Based on typical design principles a motivating learning game is developed to train students in software design. We use Bloom's taxonomy to determine learning objectives. We keep the player engaged with direct feedback in a challenging level based game with increasing complexity. Players can evaluate their design actions with the help of the visualisation of control and data flows. The main learning objective: applying design principles, fits the game's main activity. This supports the learning by doing approach of lecturers. A user test indicates possible learning effects and a playable game.},
archivePrefix = {arXiv},
arxivId = {1401.5111},
author = {Stikkolorum, Dave R. and Chaudron, Michel R. V. and de Bruin, Oswald},
eprint = {1401.5111},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/Stikkolorum, Chaudron, de Bruin/Unknown/Stikkolorum, Chaudron, de Bruin - Unknown - 2014 - The Art of Software Design, a Video Game for Learning Software Design Principles.pdf:pdf},
mendeley-groups = {Literature Review,MODELS 2016},
month = {jan},
title = {{The Art of Software Design, a Video Game for Learning Software Design Principles}},
url = {http://arxiv.org/abs/1401.5111},
year = {2014}
}

@inproceedings{Pedreira2015,
abstract = {Context: Gamification seeks for improvement of the user's engagement, motivation, and performance when carrying out a certain task, by means of incorporating game mechanics and elements, thus making that task more attractive. Much research work has studied the application of gamification in software engineering for increasing the engagement and results of developers. Objective: The objective of this paper is to carry out a systematic mapping of the field of gamification in software engineering in an attempt to characterize the state of the art of this field identifying gaps and opportunities for further research. Method: We carried out a systematic mapping with a view to finding the primary studies in the existing literature, which were later classified and analyzed according to four criteria: the software process area addressed, the gamification elements used, the type of research method followed, and the type of forum in which they were published. A subjective evaluation of the studies was also carried out to evaluate them in terms of methodology, empirical evidence, integration with the organization, and replicability. Results: As a result of the systematic mapping we found 29 primary studies, published between January 2011 and June 2014. Most of them focus on software development, and to a lesser extent, requirements, project management, and other support areas. In the main, they consider very simple gamification mechanics such as points and badges, and few provide empirical evidence of the impact of gamification. Conclusions: Existing research in the field is quite preliminary, and more research effort analyzing the impact of gamification in SE would be needed. Future research work should look at other game mechanics in addition to the basic ones and should tackle software process areas that have not been fully studied, such as requirements, project management, maintenance, or testing. Most studies share a lack of methodological support that would make their proposals replicable in other settings. The integration of gamification with an organization's existing tools is also an important challenge that needs to be taken up in this field.},
author = {Pedreira, Oscar and Garc{\'{i}}a, F{\'{e}}lix and Brisaboa, Nieves and Piattini, Mario},
booktitle = {Information and Software Technology},
keywords = {Gamification,Software engineering,Systematic mapping},
mendeley-groups = {MODELS 2016},
number = {1},
pages = {157--168},
publisher = {Elsevier},
title = {{Gamification in software engineering - A systematic mapping}},
volume = {57},
year = {2015}
}

@misc{Groenewegen2010,
abstract = {This paper concerns the application of a gaming approach to the validation of ArchiMate models, with the aim of enhancing validation, by nonarchitects, beyond mere reading of the model. The game offers a guided process for systematic exploration of ArchiMate models, and for systematically raising questions about them. The development process and the design principles behind the game are discussed, as well as the information transformation involved in creating a model-specific game from an ArchiMate model. The game has been evaluated through application in a small real life case. We discuss the influence of our approach to model understanding by the players, and the conceptual merits and flaws of the game. {\textcopyright} 2010 Springer-Verlag Berlin Heidelberg.},
author = {Groenewegen, J and Hoppenbrouwers, S and Proper, E},
booktitle = {11th International Workshop on Business Process Modeling, Development and Support, BPMDS 2010 and 15th International Conference on Exploring Modeling Methods for Systems Analysis and Design, EMMSAD 2010, Held in Conjunction with CAiSE 2010},
doi = {10.1007/978-3-642-13051-9_16},
isbn = {18651348 (ISSN); 9783642130502 (ISBN)},
issn = {18651348},
keywords = {Architecture models,Development process,Enterprise Architecture,Enterprise architecture,Games,Information transformations,Model understanding,Systematic exploration,Systems analysis,Systems engineering,Validation},
mendeley-groups = {Literature Review,MODELS 2016},
pages = {182--194},
title = {{Playing ArchiMate models}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84873171459{\&}partnerID=40{\&}md5=619343b982381a32f557685cd1599dcd},
volume = {50 LNBIP},
year = {2010}
}


@article{Deterding2013,
abstract = {In recent years, gamification - the use of game design elements in non-game contexts - has seen rapid adoption in the software industry, as well as a growing body of research on its uses and effects. However, little is known about the effective design of such gameful systems, including whether their evaluation requires special approaches. This workshop therefore convenes researchers and industry practitioners to identify current practices, challenges, and open research questions in the design of gameful systems.},
archivePrefix = {arXiv},
arxivId = {ACM 978-1-4503-0816-8/11/09},
author = {Deterding, Sebastian and Bj{\"{o}}rk, Staffan L. and Nacke, Lennart E. and Dixon, Dan and Lawley, Elizabeth},
doi = {10.1145/2468356.2479662},
eprint = {11/09},
isbn = {9781450319522},
issn = {9781450319522},
journal = {CHI '13 Extended Abstracts on Human Factors in Computing Systems on - CHI EA '13},
keywords = {design methods,design research,game design,gameful design,gamification,playful design},
mendeley-groups = {MODELS 2016},
pages = {3263},
primaryClass = {ACM 978-1-4503-0816-8},
title = {{Designing Gamification: creating gameful and playful experiences}},
url = {http://dl.acm.org/citation.cfm?id=2468356.2479662},
year = {2013}
}


@article{Yohannis2014,
abstract = {In a state where games and their elements have been extensively used not only for pleasure but also for other purposes, gamification still has some pros and cons about its definition, which might influence people's decisions on their game-related strategies to improve their performance. This work tries to define gamification by using lexical meaning approach as the starting point and viewing it from a process viewpoint. Lexical meaning approach interprets gamification as a process or a product of the process. From this perspective, gamification can be viewed as a process that adds certain characteristics to an object that makes the object different from its previous condition and feasible to be formalized. Furthermore, the resulting definition is tested by comparing it to other existing gamification definitions and the understanding that constructs the definition is used as the foundation to explain the differences between gamification and serious games. This paper then defines gamification as a process that integrates game elements into gameless objects in order to have gameful characteristics. There will be a situation where gamification will produce a state of gameful reality: a situation in the real world where people can feel the significant presence of gamefulness in their daily life.},
author = {Yohannis, A R and Prabowo, Y D and Waworuntu, A},
journal = {Information Technology Systems and Innovation (ICITSI), 2014 International Conference on},
keywords = {game elements,game-relat,serious games (computing)},
number = {June 2015},
pages = {284--289},
title = {{Defining gamification: From lexical meaning and process viewpoint towards a gameful reality}},
year = {2014}
}

@article{Kapp2012,
abstract = {Learning professionals are finding success applying game-based sensibilities to the development of instruction. This is the first book to show how to design online instruction that leverages the best elements of online games to increase learning, retention, and application. It explains how to match different game strategies to types of learning content for the right learning outcome and discusses how gamification techniques can be used in a variety of settings to improve learning, retention and application of knowledge. Supported by peer-reviewed studies and examples from corporations who have adopted game-based learning successfully, the book illustrates how combining instructional design thinking with game concepts can create engaged and interactive learning experiences across a variety of media, from online to face-to-face.},
author = {Kapp, Karl M.},
doi = {10.1145/2207270.2211316},
isbn = {1118096347},
issn = {1535394X},
journal = {The Gamification of Learning and Instruction: Game-Based Methods and Strategies for Training and Education},
mendeley-groups = {MODELS 2016},
pages = {1--23},
title = {{What Is Gamification?}},
year = {2012}
}

@inproceedings{Werbach2014,
abstract = {Gamification is a growing phenomenon of interest to both practitioners and researchers. There remains, however, uncertainty about the contours of the field. Defining gamification as “the process of making activities more game-like” focuses on the crucial space between the components that make up games and the holistic experience of gamefulness. It better fits real- world examples and connects gamification with the literature on persuasive design.},
author = {Werbach, Kevin},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
keywords = {Gamification,games,persuasive design,persuasive technology},
mendeley-groups = {Literature Review},
pages = {266--272},
publisher = {Springer Verlag},
title = {{(Re)defining gamification: A process approach}},
volume = {8462 LNCS},
year = {2014}
}

@article{Naps2005,
abstract = {JHAVE fosters the use of algorithm visualization as an effective pedagogical tool for computer science educators, helping students to better understand algorithms. The Java-hosted algorithm visualization environment (JHAVE) is not an AV system itself but rather a support environment for a variety of AV systems (called AV engines by JHAVE). In broad terms, JHAVE gives such an engine a drawing context on which it can render its pictures in any way. In return, JHAVE provides the engine with effortless ways to synchronize its graphical displays with i) a standard set of VCR-like controls, ii) information and pseudocode windows, iii) input generators, iv) stop-and-think questions, and v) meaningful content generation tools.},
author = {Naps, Thomas L.},
journal = {IEEE Computer Graphics and Applications},
number = {5},
pages = {49--55},
title = {{Jhav{\'{e}}: Supporting algorithm visualization}},
volume = {25},
year = {2005}
}

@inproceedings{schmidt2014teaching,
  title={Teaching model-driven software development: revealing the great miracle of code generation to students},
  author={Schmidt, Andreas and Kimmig, Daniel and Bittner, Klaus and Dickerhof, Markus},
  booktitle={Proceedings of the Sixteenth Australasian Computing Education Conference-Volume 148},
  pages={97--104},
  year={2014},
  organization={Australian Computer Society, Inc.}
}

@article{Szmurlo2007,
abstract = {Teaching software engineering in the academia always faces the problem$\backslash$nof inability to show problems of real life development projects.$\backslash$nThe courses seem to be unable to properly show the need of using$\backslash$nsoftware modeling as important means of coping with complexity and$\backslash$nhandling communication within the project. The paper presents format$\backslash$nof a course that tries to overcome this. It focuses on application$\backslash$nof modeling tools in a realistic software engineering environment.$\backslash$nThe objective is to teach best practices of software design and implementation$\backslash$nwith the use of UML. The students can practice design and communication$\backslash$ntechniques based around CASE tools in teams of 12 to 14 people. The$\backslash$npaper summarizes 5 years of experience in teaching modeling with$\backslash$nCASE tools. Authors present a concept of how to simulate the roles$\backslash$nof architects, designers and programmers as close to reality as possible.$\backslash$nThe paper also$\backslash$n$\backslash$ndiscusses the problems of organizing laboratory work for a large$\backslash$ngroup of students. Authors present the tasks and their arrangement$\backslash$nduring the course.},
author = {Szmurlo, Robert and {\'{S}}mialek, Michal},
doi = {10.1007/978-3-540-69489-2_37},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/Szmurlo, {\'{S}}mialek/Lecture Notes in Computer Science/Szmurlo, {\'{S}}mialek - Lecture Notes in Computer Science - 2007 - Teaching Software Modeling in a Simulated Project Environment.pdf:pdf},
isbn = {978-3-540-69488-5},
issn = {03029743},
journal = {Lecture Notes in Computer Science},
keywords = {CASE,ms,object-oriented,teaching,tools},
mendeley-groups = {Literature Review,MODELS 2016},
pages = {301--310},
title = {{Teaching Software Modeling in a Simulated Project Environment}},
volume = {4364},
year = {2007}
}

@inproceedings{Whittle2014,
abstract = {This paper reflects on Lancaster University's software design studio, an approach for teaching software engineering that favours practical experimentation over traditional lectures. The studio has been running for two years at Lancaster. In the paper, we reflect on how students have used modeling as part of the studio experience. Our findings show that, given the freedom, students make heavy use of informal modeling but almost never formally model. The paper unpicks the reasons for this and discusses implications for the way modeling is taught more generally.},
author = {Whittle, Jon and Bull, Christopher N. and Lee, Jaejoon and Kotonya, Gerald},
booktitle = {CEUR Workshop Proceedings},
mendeley-groups = {MODELS 2016},
pages = {12--21},
publisher = {CEUR-WS},
title = {{Teaching in a software design studio: Implications for modeling education}},
volume = {1346},
year = {2014}
}

@article{neubauer2003immersive,
  title={Immersive visual modeling: potential use of virtual reality in teaching software design},
  author={Neubauer, Bruce J and Harris, James D},
  journal={Journal of Computing Sciences in Colleges},
  volume={18},
  number={6},
  pages={142--150},
  year={2003},
  publisher={Consortium for Computing Sciences in Colleges}
}

@inproceedings{Brandsteidl2011,
abstract = {Huge classes with more than 800 students pose a major challenge to lecturers as well as to students, especially when a practical part is included. In order to successfully master lectures of this size, novel kinds of teaching media provide a multitude of enhanced opportunities. In this paper, we present our experiences with the application of new media in our undergraduate course Introduction to Object-Oriented Modeling (OOM). In this course, we teach approximately 800-1000 students per year the principles and techniques of UML 2.0. New media, i.e., technologies other than the traditional blackboard presentation like a document camera, web-based self assessments, or lecture recordings, are applied to support both, students and lecturers when learning and teaching, respectively. We empirically underline the acceptance of our concept with the feedback of our students concerning the newly used technologies gained through an extensive survey. {\textcopyright} 2011 Springer-Verlag Berlin Heidelberg.},
author = {Brandsteidl, Marion and Wieland, Konrad and Huemer, Christian},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
keywords = {Basic Modeling Course,Teaching Object-Oriented Modeling,Teaching UML},
mendeley-groups = {MODELS 2016},
pages = {40--54},
title = {{Novel communication channels in software modeling education}},
volume = {6627 LNCS},
year = {2011}
}

@inproceedings{Akayama2013,
abstract = {An important decision that must be taken by anyone design- ing a course involving (object oriented software) modelling is what tool support, if any, to use. Options include picking an industrial strength modelling tool, using a tool speciﬁcally designed for educational use, or eschewing tool use altogether in favour of pencil and paper. The best an- swer will depend on many factors, including the prior experience of the students (and staﬀ), the length and organisation of the course, and the learning objectives. Moreover, decisions on tools have an impact on other aspects of course design. In this informal paper, the result of discussion at the MODELS Educators' Symposium 2013, we survey previous work on this question, discuss our own experience, and draw out some key issues that someone designing a new course involving modelling must consider.},
address = {Miami, U.S.A.},
author = {Akayama, Seiko and Brandsteidl, Marion and Demuth, Birgit and Hisazumi, Kenji and Lethbridge, Timothy C and Stevens, Perdita and Stikkolorum, Dave R},
booktitle = {the Educators' Symposium co-located with ACM/IEEE 16th International Conference on Model Driven Engineering Languages and Systems (MODELS 2013)},
editor = {Lethbridge, Timothy C. and Stevens, Perdita},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/Akayama et al/the Educators' Symposium co-located with ACMIEEE 16th International Conference on Model Driven Engineering Languages and Systems (MODELS 201./Akayama et al. - the Educators' Symposium co-located with ACMIEEE 16.pdf:pdf},
mendeley-groups = {Literature Review,MODELS 2016},
title = {{Tool use in software modelling education: state of the art and research directions}},
url = {http://ceur-ws.org/Vol-1134/paper6.pdf},
year = {2013}
}

@inproceedings{moisan2009teaching,
  title={Teaching object-oriented modeling and UML to various audiences},
  author={Moisan, Sabine and Rigault, Jean-Paul},
  booktitle={International Conference on Model Driven Engineering Languages and Systems},
  pages={40--54},
  year={2009},
  organization={Springer}
}

@inproceedings{deterding2011game,
  title={From game design elements to gamefulness: defining gamification},
  author={Deterding, Sebastian and Dixon, Dan and Khaled, Rilla and Nacke, Lennart},
  booktitle={Proceedings of the 15th international academic MindTrek conference: Envisioning future media environments},
  pages={9--15},
  year={2011},
  organization={ACM}
}

@article{peffers2007design,
  title={A design science research methodology for information systems research},
  author={Peffers, Ken and Tuunanen, Tuure and Rothenberger, Marcus A and Chatterjee, Samir},
  journal={Journal of management information systems},
  volume={24},
  number={3},
  pages={45--77},
  year={2007},
  publisher={Taylor \& Francis}
}

@article{deterding2015lens,
  title={The lens of intrinsic skill atoms: A method for gameful design},
  author={Deterding, Sebastian},
  journal={Human--Computer Interaction},
  volume={30},
  number={3-4},
  pages={294--335},
  year={2015},
  publisher={Taylor \& Francis}
}

@article{Kramer2007,
abstract = {Why is it that some software engineers and computer scientists are able to produce clear, elegant designs and programs, while others cannot? Is it possible to improve these skills through education and training? Critical to these questions is the notion of abstraction.},
author = {Kramer, Jeff},
doi = {10.1145/1232743.1232745},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/Kramer/Communications of the ACM/Kramer - Communications of the ACM - 2007 - Is abstraction the key to computing.pdf:pdf},
isbn = {0001-0782},
issn = {00010782},
journal = {Communications of the ACM},
mendeley-groups = {Software Modelling,Literature Review},
number = {4},
pages = {36--42},
title = {{Is abstraction the key to computing?}},
url = {http://portal.acm.org/citation.cfm?doid=1232743.1232745},
volume = {50},
year = {2007}
}

@inproceedings{Borstler2012,
address = {New York, New York, USA},
author = {B{\"{o}}rstler, J{\"{u}}rgen and Kuzniarz, Ludwik and Alphonce, Carl and Sanders, William B. and Smialek, Michal},
booktitle = {Proceedings of the final reports on Innovation and technology in computer science education 2012 working groups - ITiCSE-WGR '12},
doi = {10.1145/2426636.2426640},
file = {:D$\backslash$:/PROGRAM FILES/MENDELEY/B{\"{o}}rstler et al/Proceedings of the final reports on Innovation and technology in computer science education 2012 working groups - ITiCSE-WGR '12/B{\"{o}}rstler et al. - Proceedings of the final reports on Innovation and technology.pdf:pdf},
isbn = {9781450318723},
mendeley-groups = {Literature Review},
month = {jul},
pages = {39},
publisher = {ACM Press},
title = {{Teaching software modeling in computing curricula}},
url = {http://dl.acm.org/citation.cfm?id=2426636.2426640},
year = {2012}
}

@misc{Duval2006,
abstract = {cit{\'{e}} 813 fois, avril 2016. To understand the difficulties that many students have with comprehension of mathematics, we must determine the cognitive functioning underlying the diversity of mathematical processes. What are the cognitive systems that are required to give access to mathematical objects? Are these systems common to all processes of knowledge or, on the contrary, some of them are specific to mathematical activity? Starting from the paramount importance of semiotic representation for any mathematical activity, we put forward a classification of the various registers of semiotic representations that are mobilized in mathematical processes. Thus, we can reveal two types of transformation of semiotic representations: treatment and conversion. These two types correspond to quite different cognitive processes. They are two separate sources of incomprehension in the learning of mathematics. If treatment is the more important from a mathematical point of view, conversion is basically the deciding factor for learning. Supporting empirical data, at any level of curriculum and for any area of mathematics, can be widely and methodologically gathered: some empirical evidence is presented in this paper.},
author = {Duval, Raymond},
booktitle = {Educational Studies in Mathematics},
keywords = {Cognitive paradox,Figural organization,Knowledge object,Language,Mathematics learning,Multifunctional and monofunctional registers,Non-congruence,Recognition,Representation,Representation conversion,Semiotic representation,Semiotic system},
mendeley-groups = {MODELS 2016},
number = {1-2},
pages = {103--131},
title = {{A cognitive analysis of problems of comprehension in a learning of mathematics}},
volume = {61},
year = {2006}
}

@incollection{Saitta2013,
abstract = {In this chapter the notions of abstraction introduced or used in various disciplines are reviewed. In particular, Philosophy, Computer Science, Cognition, Vision, Art, and Mathematics have been taken into consideration. The chapter is not intended to be a state-of-the-art in the selected fields, but an overview of the ideas behind abstraction and its use.},
author = {Saitta, Lorenza and Zucker, Jean-Daniel},
booktitle = {Abstraction in Artificial Intelligence and Complex Systems},
chapter = {2},
doi = {10.1007/978-1-4614-7052-6_2},
isbn = {978-1-4614-7051-9},
mendeley-groups = {MODELS 2016},
pages = {11--47},
publisher = {Springer New York},
title = {{02 - Abstraction in Different Disciplines}},
url = {http://link.springer.com/chapter/10.1007/978-1-4614-7052-6{\_}2},
year = {2013}
}

@article{Michael2005,
abstract = {Provides information on how to take entertainment game development skills and adapt them to the design of serious games for education, training, and healing.},
author = {Michael, D R and Chen, S L},
doi = {10.1021/la104669k},
isbn = {1592006221},
issn = {0192-415X},
journal = {Education},
mendeley-groups = {CEEC 2016},
pages = {1--95},
pmid = {19606518},
title = {{Serious Games: Games That Educate, Train, and Inform}},
url = {http://portal.acm.org/citation.cfm?id=1051239},
volume = {October 31},
year = {2005}
}

@inproceedings{Yohannis2015,
abstract = {{\textcopyright} 2015 IEEE. Algorithms are commonly perceived as a difficult subject, which is quite an irony as they have a fundamental role in computer science. Failure to master this subject will inhibit students" capabilities as they advance to higher levels. Algorithm visualization, as an effort to overcome the problem, has been growing towards gameful visualization recently that is presumed to be able to engage learners longer and more intensely. However, integrating algorithm visualization, game elements, and instructional design is not a trivial task as it requires a careful design. Hence, a conceptual model of how algorithm learning instructions, algorithm visualization, and gamification improve learning outcomes was developed. While instructional design concerns with developing the best strategy for learning, algorithm visualization functions as a cognitive support provider and gamification works by delivering engagement. Both cognitive support and engagement moderate the learning instructions that concern with enhancing learning outcomes. Principles and elements originating from the three domains have to be taken into consideration during the designing process to produce an artifact that can deliver the essential functions of each domain. A working artifact was then constructed, as the instantiation of the model, to validate whether the idea of integrating algorithm visualization and gamification into algorithm learning instructions is capable enough to improve learning outcomes. Based on our respondents" learning outcomes, it was found the artifact can significantly improve the procedural knowledge of learners that are indicated by their increased capability in solving sorting algorithm problems.},
author = {Yohannis, A. and Prabowo, Y.},
booktitle = {VS-Games 2015 - 7th International Conference on Games and Virtual Worlds for Serious Applications},
doi = {10.1109/VS-GAMES.2015.7295785},
isbn = {9781479981021},
keywords = {algorithm learning,algorithm visualization,gamification,instructional design,sorting algorithms},
title = {{Sort Attack: Visualization and Gamification of Sorting Algorithm Learning}},
year = {2015}
}

@article{Ibanez2014,
abstract = {Gamification is the use of game design elements in non-game settings to engage participants and encourage desired behaviours. It has been identified as a promising technique to improve students' engagement which could have a positive impact on learning. This study evaluated the learning effectiveness and engagement appeal of a gamified learning activity targeted at the learning of C-programming language. Furthermore, the study inquired into which gamified learning activities were more appealing to students. The study was conducted using the mixed-method sequential explanatory protocol. The data collected and analysed included logs, questionnaires, and pre- and post-tests. The results of the evaluation show positive effects on the engagement of students toward the gamified learning activities and a moderate improvement in learning outcomes. Students reported different motivations for continuing and stopping activities once they completed the mandatory assignment. The preferences for different gamified activities were also conditioned by academic milestones.},
author = {Ibanez, Maria-Blanca and Di-Serio, Angela and Delgado-Kloos, Carlos},
doi = {10.1109/TLT.2014.2329293},
isbn = {1939-1382 VO - 7},
issn = {1939-1382},
journal = {IEEE Transactions on Learning Technologies},
keywords = {Communities,Computer languages,Education,Electronic mail,Games,Planning},
mendeley-groups = {MODELS 2016},
number = {3},
pages = {291--301},
title = {{Gamification for Engaging Computer Science Students in Learning Activities: A Case Study}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6827214},
volume = {7},
year = {2014}
}


